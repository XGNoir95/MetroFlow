@* Views/Shared/Chatbot.cshtml *@

<div class="chatbot-container">
    <div class="chatbot-window">
        <div class="chatbot-header">
            <div class="chatbot-title">
                <i class="fas fa-robot"></i>
                <span>MetroFlow AI Assistant</span>
            </div>
            <div class="chatbot-controls">
                <button class="chatbot-clear" title="Clear conversation">
                    <i class="fas fa-broom"></i>
                </button>
                <button class="chatbot-close">
                    <i class="fas fa-times"></i>
                </button>
            </div>
        </div>
        <div class="chatbot-messages">
            <div class="message bot-message">
                <div class="message-header">
                    <i class="fas fa-robot"></i>
                    <span>MetroFlow AI Assistant</span>
                </div>
                <div class="message-content">
                    Hello! I'm your MetroFlow AI Assistant. How can I help you today?
                </div>
                <div class="message-timestamp">Just now</div>
            </div>
        </div>
        <div class="chatbot-input">
            <input type="text" placeholder="Ask about routes, tickets, schedules, or report an issue...">
            <button class="send-button">
                <i class="fas fa-paper-plane"></i>
            </button>
        </div>
    </div>
    <div class="chatbot-icon">
        <i class="fas fa-comments"></i>
        <span class="notification-badge"></span>
    </div>
</div>

<style>
    /* Keep your same CSS styles (unchanged) */
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const chatbotIcon = document.querySelector('.chatbot-icon');
        const chatbotWindow = document.querySelector('.chatbot-window');
        const closeButton = document.querySelector('.chatbot-close');
        const clearButton = document.querySelector('.chatbot-clear');
        const sendButton = document.querySelector('.send-button');
        const inputField = document.querySelector('.chatbot-input input');
        const messagesContainer = document.querySelector('.chatbot-messages');

        // Toggle chatbot window
        chatbotIcon.addEventListener('click', () => chatbotWindow.classList.toggle('active'));
        closeButton.addEventListener('click', () => chatbotWindow.classList.remove('active'));

        // Clear conversation
        clearButton.addEventListener('click', () => {
            const messages = messagesContainer.querySelectorAll('.message');
            messages.forEach((m, i) => { if (i > 0) m.remove(); }); // keep first bot message
        });

        // Send message
        async function sendMessage() {
            const message = inputField.value.trim();
            if (!message) return;

            addMessage(message, 'user');
            inputField.value = '';

            try {
                const response = await fetch('/chatbot/ask', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ message })
                });

                const data = await response.json();
                addMessage(data.response, 'bot');
            } catch (error) {
                addMessage("⚠️ Sorry, I couldn't reach the server.", 'bot');
            }
        }

        sendButton.addEventListener('click', sendMessage);
        inputField.addEventListener('keypress', e => { if (e.key === 'Enter') sendMessage(); });

        // Utility function
        function addMessage(text, sender) {
            const messageElement = document.createElement('div');
            messageElement.classList.add('message', sender + '-message');

            const now = new Date();
            const timestamp = now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });

            messageElement.innerHTML = `
                <div class="message-header">
                    <i class="fas fa-${sender === 'user' ? 'user' : 'robot'}"></i>
                    <span>${sender === 'user' ? 'You' : 'MetroFlow AI Assistant'}</span>
                </div>
                <div class="message-content">${text}</div>
                <div class="message-timestamp">${timestamp}</div>
            `;

            messagesContainer.appendChild(messageElement);
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        }
    });
</script>
