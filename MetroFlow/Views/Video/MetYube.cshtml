@model IEnumerable<MetroFlow.Models.Video>

@{
    Layout = "_Layout";
    ViewData["Title"] = "MetYube - Video Library";
}

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
</head>
<style>
    /* Removed floating animations for top section */

    @@keyframes float2 {
        0%, 100% {
            transform: translateY(0px) translateX(0px) scale(0.8);
            opacity: 0.2;
        }

        33% {
            transform: translateY(-25px) translateX(-20px) scale(1.2);
            opacity: 0.5;
        }

        66% {
            transform: translateY(-5px) translateX(25px) scale(0.7);
            opacity: 0.3;
        }
    }

    @@keyframes float3 {
        0%, 100% {
            transform: translateY(0px) translateX(0px) scale(1.1);
            opacity: 0.4;
        }

        40% {
            transform: translateY(-15px) translateX(-10px) scale(0.9);
            opacity: 0.6;
        }

        80% {
            transform: translateY(-35px) translateX(15px) scale(1.3);
            opacity: 0.2;
        }
    }

    @@keyframes float4 {
        0%, 100% {
            transform: translateY(0px) translateX(0px) scale(0.9);
            opacity: 0.3;
        }

        30% {
            transform: translateY(-20px) translateX(20px) scale(1.1);
            opacity: 0.5;
        }

        70% {
            transform: translateY(-10px) translateX(-25px) scale(0.8);
            opacity: 0.4;
        }
    }

    .floating-circle-2 {
        animation: float2 10s ease-in-out infinite 2s;
    }

    .floating-circle-3 {
        animation: float3 12s ease-in-out infinite 4s;
    }

    .floating-circle-4 {
        animation: float4 9s ease-in-out infinite 1s;
    }

    .floating-circle-5 {
        animation: float2 11s ease-in-out infinite 3s;
    }

    .floating-circle-6 {
        animation: float2 7s ease-in-out infinite 5s;
    }

    .video-hover-effect:hover {
        border-color: rgb(134, 239, 172);
        box-shadow: 0 0 20px rgba(134, 239, 172, 0.5);
        transform: translateY(-5px);
    }

    .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .filter-button.active {
        background-color: rgb(22, 163, 74) !important;
        color: white !important;
    }

    .video-item {
        transition: all 0.3s ease;
    }
</style>

<!-- Hero Section -->
<section class="relative bg-gradient-to-b from-green-400 to-green-800 text-white py-16 overflow-hidden">
    <!-- Static circles (no animation) -->
    <div class="absolute top-20 left-16 w-24 h-24 bg-green-300 rounded-full opacity-30 blur-sm"></div>
    <div class="absolute top-40 right-20 w-16 h-16 bg-green-200 rounded-full opacity-20 blur-sm"></div>
    <div class="absolute top-60 left-32 w-32 h-32 bg-green-400 rounded-full opacity-25 blur-sm"></div>

    <!-- Animated circles (only in bottom area) -->
    <div class="floating-circle-4 absolute bottom-32 right-16 w-20 h-20 bg-green-300 rounded-full opacity-35 blur-sm"></div>
    <div class="floating-circle-5 absolute bottom-20 left-20 w-28 h-28 bg-green-200 rounded-full opacity-30 blur-sm"></div>
    <div class="floating-circle-6 absolute top-32 right-40 w-12 h-12 bg-green-400 rounded-full opacity-40 blur-sm"></div>

    <div class="max-w-8xl mx-auto px-6 text-center relative z-10">
        <h1 class="text-4xl md:text-5xl font-bold mb-6">MetYube Video Library</h1>
        <p class="text-xl text-green-100 mb-8">Explore our collection of metro-related videos and tutorials</p>
        <div class="flex justify-center gap-4">
            <div class="bg-white/10 backdrop-blur-sm rounded-full px-6 py-2">
                <span class="text-lg">@Model.Count() Videos</span>
            </div>
            <div class="bg-white/10 backdrop-blur-sm rounded-full px-6 py-2">
                <span class="text-lg">Multiple Categories</span>
            </div>
        </div>
    </div>
</section>

<!-- Video Grid Section -->
<section class="py-12 bg-gray-50">
    <div class="max-w-8xl lg: mx-40 px-6">
        <!-- Category Filter -->
        <div class="mb-8 text-center">
            <h2 class="text-3xl font-bold text-gray-800 mb-4">All Videos</h2>
            <div class="flex flex-wrap justify-center gap-2" id="categoryFilter">
                <button class="filter-button active px-4 py-2 bg-green-600 text-white rounded-full hover:bg-green-700 transition-colors" data-category="all">
                    All Categories
                </button>
                @foreach (var category in Model.Select(v => v.Category).Distinct())
                {
                    <button class="filter-button px-4 py-2 bg-white text-green-600 border border-green-600 rounded-full hover:bg-green-50 transition-colors" data-category="@category">
                        @category
                    </button>
                }
            </div>
        </div>

        <!-- Video Grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8" id="videoGrid">
            @foreach (var video in Model)
            {
                <div class="video-item bg-white rounded-xl shadow-md overflow-hidden video-hover-effect transition-all duration-300 group" data-category="@video.Category">
                    <a asp-action="Detail" asp-route-id="@video.Id" class="block">
                        <!-- Video Thumbnail -->
                        <div class="relative aspect-video bg-gray-200 overflow-hidden">
                            <div class="absolute inset-0 bg-gradient-to-br from-green-400 to-blue-500 opacity-90 group-hover:opacity-70 transition-opacity"></div>
                            <div class="absolute inset-0 flex items-center justify-center">
                                <div class="w-16 h-16 bg-white/20 rounded-full flex items-center justify-center group-hover:scale-110 transition-transform">
                                    <i class="fas fa-play text-white text-2xl"></i>
                                </div>
                            </div>
                            <div class="absolute bottom-3 left-3 bg-black/50 text-white px-2 py-1 rounded text-sm">
                                @video.Category
                            </div>
                        </div>

                        <!-- Video Info -->
                        <div class="p-6">
                            <h3 class="text-xl font-semibold text-gray-800 mb-2 group-hover:text-green-600 transition-colors line-clamp-2">
                                @video.Title
                            </h3>
                            <p class="text-gray-600 text-sm line-clamp-2 mb-4">
                                @video.Description
                            </p>
                            <div class="flex items-center justify-between">
                                <span class="text-green-600 font-medium">Watch Now</span>
                                <div class="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center group-hover:bg-green-600 transition-colors">
                                    <i class="fas fa-arrow-right text-green-600 group-hover:text-white text-sm"></i>
                                </div>
                            </div>
                        </div>
                    </a>
                </div>
            }
        </div>

        @if (!Model.Any())
        {
            <div class="text-center py-12">
                <div class="w-24 h-24 mx-auto mb-6 bg-gray-200 rounded-full flex items-center justify-center">
                    <i class="fas fa-video text-gray-400 text-3xl"></i>
                </div>
                <h3 class="text-2xl font-semibold text-gray-600 mb-2">No Videos Available</h3>
                <p class="text-gray-500">Check back later for new content.</p>
            </div>
        }
    </div>
</section>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const filterButtons = document.querySelectorAll('.filter-button');
        const videoItems = document.querySelectorAll('.video-item');

        filterButtons.forEach(button => {
            button.addEventListener('click', function() {
                // Remove active class from all buttons
                filterButtons.forEach(btn => btn.classList.remove('active'));

                // Add active class to clicked button
                this.classList.add('active');

                const category = this.getAttribute('data-category');

                // Filter videos
                videoItems.forEach(video => {
                    if (category === 'all' || video.getAttribute('data-category') === category) {
                        video.style.display = 'block';
                    } else {
                        video.style.display = 'none';
                    }
                });
            });
        });
    });
</script>