@if (User.Identity?.IsAuthenticated == true)
{
    <!-- User Profile Popup Modal -->
    <div id="userProfileModal" class="fixed inset-0 bg-black bg-opacity-60 hidden flex items-start justify-center backdrop-blur-sm p-4 overflow-y-auto" style="z-index: 9999 !important;">
        <div class="bg-white rounded-3xl shadow-2xl w-full max-w-3xl my-4 transform transition-all duration-300 scale-90 opacity-0" id="profileModalContent" style="z-index: 10000 !important;">
            <!-- Modal Header -->
            <div class="bg-gradient-to-r from-green-600 to-green-800 text-white px-8 py-8 rounded-t-3xl relative">
                <button id="closeProfileModal" class="absolute top-6 right-6 text-white hover:text-gray-200 transition-colors duration-200 z-10">
                    <i class="fas fa-times text-xl"></i>
                </button>
                <!-- User Avatar -->
                <div class="flex flex-col items-center text-center">
                    <div class="w-24 h-24 rounded-full bg-white/20 flex items-center justify-center border-4 border-white/40 mb-5 shadow-lg">
                        @if (!string.IsNullOrEmpty(User.FindFirst("ImageUrl")?.Value))
                        {
                            <img src="@User.FindFirst("ImageUrl")?.Value" alt="Profile" class="w-full h-full rounded-full object-cover">
                        }
                        else
                        {
                            <i class="fas fa-user text-4xl text-white"></i>
                        }
                    </div>
                    <h3 class="text-3xl font-bold text-white mb-2">@(User.Identity.Name ?? "User")</h3>
                    <p class="text-gray-100 text-base mb-4 text-lg">@(User.FindFirst(System.Security.Claims.ClaimTypes.Email)?.Value ?? "user@example.com")</p>
                    <!-- Always Verified Badge -->
                    <div class="inline-flex items-center">
                        <span class="inline-flex items-center px-6 py-2 rounded-full text-sm font-semibold bg-green-100 text-green-800 shadow-sm">
                            <i class="fas fa-check-circle mr-2 text-green-600"></i>
                            Verified Account
                        </span>
                    </div>
                </div>
            </div>
            <!-- Modal Body -->
            <div class="px-8 py-8">
                <!-- Professional User Information Cards -->
                <div class="space-y-5">
                    <!-- Email Information -->
                    <div class="flex items-center space-x-4 p-4 bg-gray-100 rounded-xl border border-gray-300">
                        <div class="w-12 h-12 bg-green-600 rounded-xl flex items-center justify-center shadow-sm">
                            <i class="fas fa-envelope text-white text-lg"></i>
                        </div>
                        <div class="flex-1">
                            <p class="text-sm font-medium text-gray-500 uppercase tracking-wide">Email Address</p>
                            <p class="text-lg font-semibold text-gray-900 mt-1">@(User.FindFirst(System.Security.Claims.ClaimTypes.Email)?.Value ?? "user@example.com")</p>
                        </div>
                    </div>
                    <!-- Registration Date -->
                    <div class="flex items-center space-x-4 p-4 bg-gray-100 rounded-xl border border-gray-300">
                        <div class="w-12 h-12 bg-green-600 rounded-xl flex items-center justify-center shadow-sm">
                            <i class="fas fa-calendar-check text-white text-lg"></i>
                        </div>
                        <div class="flex-1">
                            <p class="text-sm font-medium text-gray-500 uppercase tracking-wide">Member Since</p>
                            <p class="text-lg font-semibold text-gray-900 mt-1">@DateTime.Now.ToString("MMMM dd, yyyy 'at' h:mm tt")</p>
                        </div>
                    </div>
                    <!-- User ID -->
                    <div class="flex items-center space-x-4 p-4 bg-gray-100 rounded-xl border border-gray-300">
                        <div class="w-12 h-12 bg-green-600 rounded-xl flex items-center justify-center shadow-sm">
                            <i class="fas fa-fingerprint text-white text-lg"></i>
                        </div>
                        <div class="flex-1">
                            <p class="text-sm font-medium text-gray-500 uppercase tracking-wide">User ID</p>
                            <p class="text-lg font-semibold text-gray-900 mt-1">#@(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value ?? "000")</p>
                        </div>
                    </div>
                    <!-- Account Status - Always Active & Verified -->
                    <div class="flex items-center space-x-4 p-4 bg-gray-100 rounded-xl border border-gray-300">
                        <div class="w-12 h-12 bg-green-600 rounded-xl flex items-center justify-center shadow-sm">
                            <i class="fas fa-check-circle text-white text-lg"></i>
                        </div>
                        <div class="flex-1">
                            <p class="text-sm font-medium text-gray-500 uppercase tracking-wide">Account Status</p>
                            <p class="text-lg font-semibold text-gray-900 mt-1">Active & Verified</p>
                        </div>
                    </div>
                </div>
                <!-- Professional Logout Button -->
                <div class="mt-8 pt-6 border-t border-gray-200">
                    <form asp-controller="User" asp-action="Logout" method="post">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="w-full bg-gradient-to-r from-red-600 to-red-700 hover:from-red-700 hover:to-red-800 text-white font-semibold py-4 px-6 rounded-xl transition-all duration-200 flex items-center justify-center space-x-3 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5">
                            <i class="fas fa-sign-out-alt text-lg"></i>
                            <span class="text-lg">Sign Out</span>
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script>
        (function() {
            const userProfileBtn = document.getElementById('userProfileBtn');
            const mobileUserProfileBtn = document.getElementById('mobileUserProfileBtn');
            const userProfileModal = document.getElementById('userProfileModal');
            const profileModalContent = document.getElementById('profileModalContent');
            const closeProfileModal = document.getElementById('closeProfileModal');

            function showProfileModal() {
                if (userProfileModal && profileModalContent) {
                    // Ensure highest z-index
                    userProfileModal.style.zIndex = '9999';
                    profileModalContent.style.zIndex = '10000';

                    userProfileModal.classList.remove('hidden');

                    // Trigger animation
                    setTimeout(() => {
                        profileModalContent.classList.remove('scale-90', 'opacity-0');
                        profileModalContent.classList.add('scale-100', 'opacity-100');
                    }, 10);

                    // Prevent body scroll
                    document.body.style.overflow = 'hidden';

                    // Additional fix: ensure modal is on top of any map elements
                    const mapElements = document.querySelectorAll('[class*="leaflet"], [class*="mapbox"], .gm-style, #map, .map');
                    mapElements.forEach(element => {
                        element.style.zIndex = '1';
                    });
                }
            }

            function hideProfileModal() {
                if (userProfileModal && profileModalContent) {
                    profileModalContent.classList.remove('scale-100', 'opacity-100');
                    profileModalContent.classList.add('scale-90', 'opacity-0');

                    setTimeout(() => {
                        userProfileModal.classList.add('hidden');
                        document.body.style.overflow = 'auto';

                        // Restore map z-index
                        const mapElements = document.querySelectorAll('[class*="leaflet"], [class*="mapbox"], .gm-style, #map, .map');
                        mapElements.forEach(element => {
                            element.style.zIndex = '';
                        });
                    }, 300);
                }
            }

            // Event listeners
            if (userProfileBtn) {
                userProfileBtn.addEventListener('click', showProfileModal);
            }

            if (mobileUserProfileBtn) {
                mobileUserProfileBtn.addEventListener('click', showProfileModal);
            }

            if (closeProfileModal) {
                closeProfileModal.addEventListener('click', hideProfileModal);
            }

            // Close modal when clicking backdrop
            if (userProfileModal) {
                userProfileModal.addEventListener('click', function(e) {
                    if (e.target === userProfileModal) {
                        hideProfileModal();
                    }
                });
            }

            // Make hideProfileModal available globally for escape key handling
            window.hideProfileModal = hideProfileModal;
        })();
    </script>
}
